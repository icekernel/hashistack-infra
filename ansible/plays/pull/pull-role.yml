- name: execute a playbook based on instance role
  hosts: all

  tasks:
    - amazon.aws.ec2_metadata_facts:
      register: meta

    - debug:
        var: meta

    # this needs metadata access for the instance set in launch template!!
    - set_fact:
        role: '{{ meta.ansible_facts.ansible_ec2_tags_instance_Role }}'

    # 0 - run once

    - name: Check for one‑time run flag
      ansible.builtin.stat:
        path: /tmp/ansible_pull_once.flag
      register: run_once_flag

    - import_tasks: ./tasks/pull-once.yml
      when: not run_once_flag.stat.exists

    - name: Create one‑time run flag
      ansible.builtin.copy:
        content: 'Ran on {{ ansible_date_time.iso8601 }}'
        dest: /tmp/ansible_pull_once.flag
      when: not run_once_flag.stat.exists

    # 1 - always run

    - import_tasks: ./tasks/user-accounts.yml

    # 2 - run based on instance role

    - import_tasks: ./tasks/pull-eliza.yml
      when: role == 'eliza'

    - import_tasks: ./tasks/pull-bastion.yml
      when: role == 'bastion'

    - import_tasks: ./tasks/pull-nomad.yml
      when: role == 'bastion'

    # 3 - run once based on instance role

    - name: Check for eliza one‑time run flag
      ansible.builtin.stat:
        path: /tmp/ansible_pull_once_eliza.flag
      register: run_once_flag_eliza

    - import_tasks: ./tasks/eliza-set-facts.yml
      when: role == 'eliza' and not run_once_flag_eliza.stat.exists

    - import_tasks: ./tasks/pull-eliza-once.yml
      when: role == 'eliza' and not run_once_flag_eliza.stat.exists

    - name: Create eliza one‑time run flag
      ansible.builtin.copy:
        content: 'Ran on {{ ansible_date_time.iso8601 }}'
        dest: /tmp/ansible_pull_once_eliza.flag
      when: not run_once_flag_eliza.stat.exists
